package bai_1;

import java.util.List;
import java.util.Scanner;

public class Main {
    private static final Scanner sc = new Scanner(System.in);

    public static void main(String[] args){
        Manage menu = new Manage();

        // ‚úÖ In menu 1 l·∫ßn l√∫c kh·ªüi ƒë·ªông
        printMenuOnce();

        while (true) {
            System.out.print("\nüëâ Nh·∫≠p l·ª±a ch·ªçn (0-3): ");
            String choice = sc.nextLine().trim();

            switch (choice) {
                case "1":
                    InputHelper.add_officer_new(menu, sc);
                    System.out.println("‚úÖ ƒê√£ th√™m c√°n b·ªô m·ªõi th√†nh c√¥ng!");
                    pauseEnter();
                    clearScreenAndShowMenu();   // ‚¨ÖÔ∏è clear + hi·ªán l·∫°i menu ·ªü tr√™n
                    break;

                case "2":
                    System.out.print("üîé Nh·∫≠p t√™n (ho·∫∑c t·ª´ kh√≥a) c·∫ßn t√¨m: ");
                    String kw = sc.nextLine().trim();
                    List<Officer> ans = menu.Search_name(kw);
                    if (ans == null || ans.isEmpty()) {
                        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y!");
                    } else {
                        ans.forEach(System.out::println);
                    }
                    pauseEnter();
                    clearScreenAndShowMenu();
                    break;

                case "3":
                    List<Officer> all = menu.getAll();
                    if (all == null || all.isEmpty()) {
                        System.out.println("üì≠ Danh s√°ch r·ªóng!");
                    } else {
                        all.forEach(System.out::println);
                    }
                    pauseEnter();
                    clearScreenAndShowMenu();
                    break;

                case "0":
                    System.out.println("üëã T·∫°m bi·ªát!");
                    return;

                default:
                    System.out.println("‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá, ch·ªâ nh·∫≠p 0-3!");
                    pauseEnter();
                    clearScreenAndShowMenu();
            }
        }
    }

    // ===== Helpers =====
    private static void printMenuOnce() {
        System.out.println("===== QU·∫¢N L√ù C√ÅN B·ªò =====");
        System.out.println("1. Th√™m m·ªõi c√°n b·ªô");
        System.out.println("2. T√¨m ki·∫øm theo h·ªç t√™n");
        System.out.println("3. Hi·ªÉn th·ªã th√¥ng tin v·ªÅ danh s√°ch c√°c c√°n b·ªô");
        System.out.println("0. Tho√°t kh·ªèi ch∆∞∆°ng tr√¨nh");
    }

    private static void pauseEnter() {
        System.out.print("\n‚è∏ Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c...");
        sc.nextLine();
    }

    /** X√≥a m√†n h√¨nh v√† IN L·∫†I MENU ngay sau ƒë√≥ ƒë·ªÉ menu lu√¥n ·ªü ƒë·∫ßu. */
    private static void clearScreenAndShowMenu() {
        // Th·ª≠ ANSI (ƒëa s·ªë terminal/Windows 10+ h·ªó tr·ª£)
        try {
            System.out.print("\033[H\033[2J"); // cursor home + clear screen
            System.out.flush();
        } catch (Exception ignored) {}

        // D·ª± ph√≤ng: g·ªçi l·ªánh h·ªá ƒëi·ªÅu h√†nh
        try {
            String os = System.getProperty("os.name").toLowerCase();
            ProcessBuilder pb = os.contains("win")
                    ? new ProcessBuilder("cmd", "/c", "cls")
                    : new ProcessBuilder("clear");
            pb.inheritIO().start().waitFor();
        } catch (Exception ignored) {}

        // ‚úÖ In l·∫°i menu ƒë·ªÉ gi·ªØ c·ªë ƒë·ªãnh ·ªü ƒë·∫ßu
        printMenuOnce();
    }
}
