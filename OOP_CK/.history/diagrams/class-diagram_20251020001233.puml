@startuml
abstract class Account {
  - data: Map
  + getId()
  + getName()
  + getType()
  + getBalance()
  + getCreatedAt()
  + getUpdatedAt()
  + asMap()
  + rename(newName)
  + deposit(amount, when)
}

class BankAccount {
  + BankAccount(name)
}

class EWalletAccount {
  + EWalletAccount(name)
}

Account <|-- BankAccount
Account <|-- EWalletAccount

class Contract {
  - stats: Stats
  - name: String
  - money: String
  - phoneNumber: String
  - vayDate: String
  - traDate: String
  - interest: double
  - type: typeInterest
  - note: String
  + getStats()
  + getName()
  + getMoney()
  + getPhoneNumber()
  + getVayDate()
  + getTraDate()
  + getInterest()
  + getType()
  + getNote()
}

class Ledger {
  - entries: List<Transaction>
  + record(txn)
  + query(...)
  + listByAccount(id)
  + find(accountId, txnId)
  + remove(txn)
}

class Transaction {
  - data: Map
  + getId()
  + getAccountId()
  + getType()
  + getAmount()
  + getOccurredAt()
  + getNote()
  + getCategory()
  + getCounterpartyAccountId()
  + updateType(type)
  + updateAmount(amount)
  + asMap()
}

Ledger "*" -- "*" Transaction
Transaction "1" -- "1" Account : accountId
@enduml
